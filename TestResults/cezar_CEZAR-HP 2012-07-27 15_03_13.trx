<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="a9101305-5011-4bbc-bdf5-cda9c7f67196" name="cezar@CEZAR-HP 2012-07-27 15:03:13" runUser="cezar-HP\cezar" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="3740fb54-692b-4acc-b3b6-d647341643d6">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="cezar_CEZAR-HP 2012-07-27 15_03_13">
      <DeploymentItem filename="C:\Users\cezar\MvcAA\MvcAutoAuction1\packages\EntityFramework.4.1.10331.0\lib\EntityFramework.dll" />
      <DeploymentItem filename="C:\Users\cezar\MvcAA\MvcAutoAuction1\MvcAutoAuction\bin\MvcAutoAuction.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-07-27T15:03:13.1415348+01:00" queuing="2012-07-27T15:03:13.2355402+01:00" start="2012-07-27T15:03:13.2615417+01:00" finish="2012-07-27T15:03:14.7926292+01:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="Index" storage="c:\users\cezar\mvcaa\mvcautoauction1\mvcautoauction.tests\bin\debug\mvcautoauction.tests.dll" id="69c83115-438a-73d3-2b32-ea53025a8671">
      <Execution id="91ee5cec-f561-4c79-98ba-f932737812c4" />
      <TestMethod codeBase="C:/Users/cezar/MvcAA/MvcAutoAuction1/MvcAutoAuction.Tests/bin/Debug/MvcAutoAuction.Tests.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="MvcAutoAuction.Tests.Controllers.HomeControllerTest, MvcAutoAuction.Tests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Index" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="69c83115-438a-73d3-2b32-ea53025a8671" executionId="91ee5cec-f561-4c79-98ba-f932737812c4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="91ee5cec-f561-4c79-98ba-f932737812c4" testId="69c83115-438a-73d3-2b32-ea53025a8671" testName="Index" computerName="CEZAR-HP" duration="00:00:01.1489218" startTime="2012-07-27T15:03:13.3215451+01:00" endTime="2012-07-27T15:03:14.7556271+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91ee5cec-f561-4c79-98ba-f932737812c4">
      <Output>
        <ErrorInfo>
          <Message>Test method MvcAutoAuction.Tests.Controllers.HomeControllerTest.Index threw exception: 
System.InvalidOperationException: The model backing the 'AutoAuctionEntities' context has changed since the database was created. Either manually delete/update the database, or call Database.SetInitializer with an IDatabaseInitializer instance. For example, the DropCreateDatabaseIfModelChanges strategy will automatically delete and recreate the database, and optionally seed it with new data.</Message>
          <StackTrace>    at System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   at System.Data.Entity.Internal.InternalContext.&lt;&gt;c__DisplayClass5.&lt;PerformDatabaseInitialization&gt;b__3()
   at System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   at System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   at System.Data.Entity.Internal.LazyInternalContext.&lt;InitializeDatabase&gt;b__4(InternalContext c)
   at System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   at System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   at System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   at System.Data.Entity.Internal.InternalContext.GetEntitySetAndBaseTypeForType(Type entityType)
   at System.Data.Entity.Internal.Linq.InternalSet`1.Initialize()
   at System.Data.Entity.Internal.Linq.InternalSet`1.get_InternalContext()
   at System.Data.Entity.Infrastructure.DbQuery`1.System.Linq.IQueryable.get_Provider()
   at System.Linq.Queryable.OrderByDescending[TSource,TKey](IQueryable`1 source, Expression`1 keySelector)
   at MvcAutoAuction.dal.HomeDAL.GetTopSellingCars(Int32 count) in C:\Users\cezar\MvcAA\MvcAutoAuction1\MvcAutoAuction\dal\Homedal.cs:line 20
   at MvcAutoAuction.Controllers.HomeController.Index() in C:\Users\cezar\MvcAA\MvcAutoAuction1\MvcAutoAuction\Controllers\HomeController.cs:line 23
   at MvcAutoAuction.Tests.Controllers.HomeControllerTest.Index() in C:\Users\cezar\MvcAA\MvcAutoAuction1\MvcAutoAuction.Tests\HomeControllerTest.cs:line 22
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>